/**
* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
*
* Do not edit this file as changes may cause incorrect behavior and will be lost
* once the code is regenerated.
*
* @generated by codegen project: GeneratePropsJavaDelegate.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import androidx.annotation.Nullable;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.uimanager.BaseViewManager;
import com.facebook.react.uimanager.BaseViewManagerDelegate;
import com.facebook.react.uimanager.LayoutShadowNode;

public class LineChartSpecViewManagerDelegate<T extends View, U extends BaseViewManager<T, ? extends LayoutShadowNode> & LineChartSpecViewManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
  public LineChartSpecViewManagerDelegate(U viewManager) {
    super(viewManager);
  }
  @Override
  public void setProperty(T view, String propName, @Nullable Object value) {
    switch (propName) {
      case "data":
        mViewManager.setData(view, (ReadableMap) value);
        break;
      case "dragEnabled":
        mViewManager.setDragEnabled(view, value == null ? false : (boolean) value);
        break;
      case "bgColor":
        mViewManager.setBgColor(view, value == null ? null : (String) value);
        break;
      case "animationEntity":
        mViewManager.setAnimationEntity(view, (ReadableMap) value);
        break;
      case "drawGridLinesEnabled":
        mViewManager.setDrawGridLinesEnabled(view, value == null ? false : (boolean) value);
        break;
      case "markerEntity":
        mViewManager.setMarkerEntity(view, (ReadableMap) value);
        break;
      case "xAxisEntity":
        mViewManager.setXAxisEntity(view, (ReadableMap) value);
        break;
      case "yAxisEntity":
        mViewManager.setYAxisEntity(view, (ReadableMap) value);
        break;
      case "highlightPerTapEnabled":
        mViewManager.setHighlightPerTapEnabled(view, value == null ? false : (boolean) value);
        break;
      case "highlightPerDragEnabled":
        mViewManager.setHighlightPerDragEnabled(view, value == null ? false : (boolean) value);
        break;
      default:
        super.setProperty(view, propName, value);
    }
  }
}
